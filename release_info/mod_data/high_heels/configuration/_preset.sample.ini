#
# License: https://creativecommons.org/licenses/by/4.0/ https://creativecommons.org/licenses/by/4.0/legalcode
# Â© 2020 https://github.com/Oops19
#
#

# As a normal user you may delete this file. It's a template for creators to provide presets.
# Content creators may use this file or the existing files as a reference.

# The preset files have to start with "preset." and end with ".ini" to be read. In between the creator name should be used (preset._creator_.ini). The data / content starts with '{' and ends with '}'.
{

# Each entry needs a unique ID. A fnv24 hash should be sufficient. The hash is only used by this mod and can not overwrite in-game resources.
# ID -MaxInt..-1000000 may be used for lookup tables. fnv value which matches your name *(-1). eg -fnv24(Oops19)=-15249630
# IDs -999999-(-1000) are reserved for future use.
# ID -1 is used for the default lookup table
# ID 0 is reserved for future use.
# IDs 1-999 for sim-height +1 .. +999 mm and default CAS items. Everything below 30 mm may be hard to notice. Recommended steps: 10 mm.
# IDs 1000-1999 are reserved for default CAS items which add a default CC item to the sim.
# IDs 2000-999999 are reserved for future use
# ID 1000000 - MaxInt: Your Choice. If you want to use similar IDs:
# a) Creator-Name: fnv24(Oops19)=15249630 + Shoe-Name: fnv24(HighHeels19)=12127751 ==> 1524963012127751
# b) Creator-Name: fnv24(Oops19)=15249630 + sequence(4 digits) ==> 15249630001
    -_fnv24_of_creator_: {

# All CAS items have to be listed in the configuration section. This section has a negative ID, with a fnv64 hash one may have some issues.
# Each CAS item needs a name, for 'ymHairBlue, ymHairRed, ymHairPink' you may use 'ymHair' if it's the same item with various colors.
# The instance IDs for the items are required. With 3 colors there should be 3 instance IDs.
# Optionally the file name may be appended with ""# 'name.package'" to allow everyone to identify the item easily.
# For each item one line should be created while it is possible to use one name and add much more instance IDs if the imers are very similar.
# The '-_fnv24_of_creator_' sections will be closed with '},'.
		'_cas_item_name_1_': [_cas_instance_id_1_a_, _cas_instance_id_1_b_, ... ], # 'cas_item_filename_1.package'
		'_cas_item_name_2_': [_cas_instance_id_2_a_, _cas_instance_id_2_b_, ... ], # 'cas_item_filename_2.package'
    },

# As mentioned above for the slider adjustments positive values are used. Once again the ID is only used in configuration files and it doesn't have to match the ID from above.
# But they have to be numeric.
# All cas items '_cas_item_name_n_' which share the same settings may be added in this section. There is no need to create a section for every cas item unless each item requires individual slider values.
    '_fnv24_of_creator_|_|0001': {

# Here we have various configuration options.
# 'CAS_IDs' should contain all '_cas_item_name_n_' which share the same slider values. This parameter is required.
		'CAS_IDs': ['_cas_item_name_1', '_cas_item_name_1_2', ...],

#TBD# # Here we have various configuration options.
#TBD# # 'CAS_Items' should contain all '_cas_item_name_n_' which share the same slider values. This parameter is required.
#TBD# 		'CAS_Items': ['_cas_item_name_1', '_cas_item_name_1_2', ...],

# The fixed string 'BodyType' defines the used body type. See ini/body_types.ini for their numbers.
# If not specified: HighHeelsConstants.DEFAULT_BODY_TYPE == 8.
        'Body_Type': 8,

# Sliders should be defined, otherwise nothing is modified. Face and body sliders are supporting, changing face sculpts is not supported.
# Additional sliders have to be defined in slider.creator.ini. The default sliders names and IDs are defined in 'slider.default.ini'.
# For face and/or body modifiers use the fixed string 'Face_Modifiers' or 'Body_Modifiers'
        'Face_Modifiers': {'_slider_name_face_1_': _slider_face_1_value_, _slider_name_face_2_: _slider_face_1_value_, ...},
        'Body_Modifiers': {'_slider_name_body_1_': _slider_body_1_value_, _slider_name_body_2_: _slider_body_1_value_, ...},

# The fixed string 'Blacklist_Interaction_IDs' allows to define interactions. When the sim changes the clothes while one of these interactions is running the default slider values will be restored.
# This may be useful for WW as a flying sim may look bad.
# If not specified: HighHeelsConstants.DEFAULT_BLACKLIST_INTERACTION_IDS == 11270438951712522986 (SimInteraction.WW_SEX_ANIMATION_DEFAULT).
# Getting the interaction IDs from XML or in-game may be hard though.
# Use [] for no blacklist. Either ON or OFF, not very comfortable but easy to configure - for now.
        'Blacklist_Interaction_IDs': [_interaction_id_1_, _interaction_id_2_, ],

# The fixed string 'Blacklist_Sim_IDs' allows to define sims which should be excluded.
# If not specified: HighHeelsConstants.DEFAULT_BLACKLIST_SIM_IDS == [].
# 'o19.hh.dump.outfit' should write the sim ID to a file.
        'Blacklist_Sim_IDs': [_sim_id_1_, sim_id_2_, ], # If sim_id is in this list no sliders will be applied.

# The fixed string 'Blacklist_Sim_IDs' allows to define how sims behave during a unique animation. THIS IS NOT IMPLEMENTED. DO NOT USE THIS TAG.
# In the best case pose and animation creators add an XML tag for each sim animated sim to specify whether fly or scale sliders may be applied
# (as a float multiplier, 0 and 1 and just in case it is ever needed everything in between).
# Solo standing and trample animations should be fine while flying while lying looks bad.
# If not specified: HighHeelsConstants.DEFAULT_BLACKLIST_ANIMATION_IDS == {}.
        'Blacklist_Animation_IDs': {},  # THIS IS NOT IMPLEMENTED. DO NOT USE THIS TAG.

# The fixed string 'Walkstyle' allows to define the walkstyle.
# To get a list of walk styles use the 'o19.walk.init' cheat console command (Shift+Ctrl+C). It will dump a list with 100 walk styles and 20 priorities.
# Currently the 1st walkstyle will be used even though more than one may be specified. Using a low priority the game may select another walk style for the sim.
# If not specified: HighHeelsConstants.DEFAULT_WALKSTYLE ==  {2293790836: MAX_INT32}. Use {} for no change. Use '-1' for MAX_INT32.
        'Walkstyle': {_walkstyle_id_1_: _walkstyle_priority_1_, _walkstyle_id_2_: _walkstyle_priority_2_, },

# Finally the '_fnv24_of_creator_0001' block has to closed and '_fnv24_of_creator_0002' may follow. Otherwise the final closing bracket '}' has to be appended.
    },
}


# Remarks
# _foo_| or _foo_ should be replaced with real text, |_| with _. The trailing | is used to separate strings if needed.
# 0001 is a placeholder for a sequence or random number.
# The format may be validated within python with a={...} or import ast; a=ast.literal_eval("...").



# In an upcoming version 'Add_Objects' will be supported.
# The sim bone to attach the item has to be specified
# The object instance ID is needed. These are not CAS objects but build CC items which usually stand still and do not move.
# The object may be moved to a position relative to the selected bone (similar to RoM Familiars). It can be rotated (Quaternion) and scaled.
# And of course one may add multiple objects.
# TODO: Replace values with _..._ values
{
    1000000: {
        'Body_Modifiers': {'tall': 0.0, 'up': 0.02, },
        'CAS_IDs': ['_cas_item_name_1', ... ],
        'Add_Objects': {
            0: {
                'Parent_Bone': 'b__ROOT__',
                'ID:' _cc_instance_id_,
                'Scale': 1.0,
                'Position': {x: 0.0, y: -0.12, z: 0.0},
                'Rotation': {w: 0.0, x: 0.0, y: 0.0, z: 1.0},
            },
        },
}